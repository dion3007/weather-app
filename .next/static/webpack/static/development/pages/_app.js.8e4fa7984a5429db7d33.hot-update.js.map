{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.8e4fa7984a5429db7d33.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import App, { Container } from 'next/app'\r\nimport React from 'react'\r\nimport { Provider } from 'react-redux'\r\nimport withReduxStore from '../app/lib/with-redux-store'\r\n\r\n// require('dotenv').config()\r\n\r\nclass AppWrapper extends App {\r\n  componentDidMount() {\r\n    // // init LS\r\n    // if (!localStorage.getItem('cart')) {\r\n    //   localStorage.setItem('cart', JSON.stringify([]))\r\n    // }\r\n\r\n    // Get User From Localstorage & Dispatch\r\n\r\n    // // Get Cart From Localstorage & Dispatch\r\n    // const cart = JSON.parse(localStorage.getItem('cart'))\r\n    // const isCart = JSON.parse(localStorage.getItem('cart')).length > 0\r\n    // console.log('componentDidMount cart-ls', cart, isCart)\r\n    // if (isCart) {\r\n    //   this.props.store.dispatch({ type: GET_CART, payload: { data: cart } })\r\n    // }\r\n\r\n    // Service Worker Register Step\r\n    if ('serviceWorker' in navigator) {\r\n      window.addEventListener('load', () => {\r\n        // navigator.serviceWorker.register('/service-worker.js')\r\n        navigator.serviceWorker.register('/static/sw.js')\r\n          .then((registration) => {\r\n            console.log('SW registered: ', registration)\r\n          })\r\n          .catch((registrationError) => {\r\n            console.log('SW registration failed: ', registrationError)\r\n          })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { Component, pageProps, store } = this.props\r\n    return (\r\n      <Container>\r\n        <Provider store={store}>\r\n          <Component {...pageProps} />\r\n        </Provider>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withReduxStore(AppWrapper)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAzCA;AACA;AA2CA;;;;A","sourceRoot":""}