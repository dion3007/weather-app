{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.d7fb281ef45f20f93bda.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Button, CardMedia, CardContent, CardActions, CardActionArea, Card, Typography, Paper } from '@material-ui/core';\r\nimport { listWeatherAPI } from '../app/api/app_api';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    objectFit: 'cover',\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      weatherResponse: [],\r\n      city: 'Jakarta',\r\n      error: '',\r\n      initialLoading: true,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getWeather()\r\n  }\r\n\r\n  async getWeather() {\r\n    try {\r\n      const listWeathers = await listWeatherAPI(this.state.city)\r\n      if (listWeathers.status !== 200) throw Error()\r\n      this.setState({ weatherResponse: listWeathers.data })\r\n    } catch (e) {\r\n      this.setState({ error: 'Terjadi kesalahan pada saat memuat data' })\r\n    }\r\n    this.setState({ initialLoading: false })\r\n  }\r\n\r\n  render() {\r\n    console.log('test', this.state.weatherResponse)\r\n    return (\r\n      <Card>\r\n        <CardActionArea>\r\n          <CardMedia\r\n            component=\"img\"\r\n            alt=\"Contemplative Reptile\"\r\n            height=\"140\"\r\n            image=\"/static/images/cards/contemplative-reptile.jpg\"\r\n            title=\"Contemplative Reptile\"\r\n          />\r\n          <CardContent>\r\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n              Lizard\r\n          </Typography>\r\n            <Typography component=\"p\">\r\n              Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging\r\n              across all continents except Antarctica\r\n          </Typography>\r\n          </CardContent>\r\n        </CardActionArea>\r\n        <CardActions>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Share\r\n        </Button>\r\n          <Button size=\"small\" color=\"primary\">\r\n            Learn More\r\n        </Button>\r\n        </CardActions>\r\n      </Card>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: state.city,\r\n})\r\n\r\nexport default connect(mapStateToProps)(App)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAJA;AAHA;AASA;AACA;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AAAA;;;;;AAAA;AACA;;AAAA;AAAA;AAAA;;;;;;;AAEA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AA3DA;AACA;AA6DA;AACA;AADA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}