{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.31eb7d35fbe4a22f672d.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { Input, OutlinedInput, FilledInput, InputLabel, MenuItem, FormHelperText, FormControl, Select, Paper } from '@material-ui/core';\r\nimport WeatherCard from '../components/card/index.js'\r\nimport { listWeatherAPI } from '../app/api/app_api';\r\n\r\nconst styles = {\r\n  card: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    objectFit: 'cover',\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      weatherResponse: [],\r\n      city: 'Jakarta',\r\n      error: '',\r\n      icon: '',\r\n      suhu: '',\r\n      date: '',\r\n      wind: '',\r\n      title: '',\r\n      initialLoading: true,\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getWeather()\r\n  }\r\n\r\n  async getWeather() {\r\n    try {\r\n      const listWeathers = await listWeatherAPI(this.state.city)\r\n      if (listWeathers.status !== 200) throw Error()\r\n      this.setState({\r\n        weatherResponse: listWeathers.data,\r\n        icon: listWeathers.data.current.condition.icon,\r\n        suhu: listWeathers.data.current.feelslike_c,\r\n        date: listWeathers.data.current.last_updated,\r\n        wind: listWeathers.data.current.wind_mph,\r\n        title: listWeathers.data.current.condition.text,\r\n      })\r\n    } catch (e) {\r\n      this.setState({ error: 'Terjadi kesalahan pada saat memuat data' })\r\n    }\r\n    this.setState({ initialLoading: false })\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { city, icon, suhu, wind, date, title, weatherResponse } = this.state\r\n    console.log(weatherResponse)\r\n    return (\r\n      <Paper>\r\n        <FormControl>\r\n          <InputLabel htmlFor=\"city\">City</InputLabel>\r\n          <Select\r\n            value={this.state.city}\r\n            onChange={(e) => {this.handleChange(e);this.getWeather()}}\r\n            inputProps={{\r\n              name: 'city',\r\n              id: 'city',\r\n            }}\r\n          >\r\n            <MenuItem value=\"\">\r\n              <em>None</em>\r\n            </MenuItem>\r\n            <MenuItem value='Jakarta'>Jakarta</MenuItem>\r\n            <MenuItem value='Bekasi'>Bekasi</MenuItem>\r\n            <MenuItem value='Aceh'>Aceh</MenuItem>\r\n            <MenuItem value='Surabaya'>Surabaya</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n        <WeatherCard\r\n          city={city}\r\n          image={icon}\r\n          suhu={suhu}\r\n          wind={wind}\r\n          date={date}\r\n          title={title}\r\n        />\r\n      </Paper>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  city: state.city,\r\n})\r\n\r\nexport default connect(mapStateToProps)(App)\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AAGA;AACA;AADA;AAJA;AACA;AAQA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuCA;AACA;AACA;AAtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAHA;AAcA;AACA;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AAAA;;;;;AAAA;AACA;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;;;;;;;AASA;AAAA;AAAA;AACA;;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAMA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AADA;AAAA;AACA;AACA;AACA;AAFA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;;;;AA7EA;AACA;AA+EA;AACA;AADA;AACA;AAGA;AAAA;AACA;AADA;AAAA;AACA;AAGA;;;;A","sourceRoot":""}